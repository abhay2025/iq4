<style>
  .edit {
    display: flex;
    margin: 2.5em 0;
  }

  .editor_btn {
    display: flex;
    flex-direction: column;
    margin-right: 1em;
  }

  .editor_btn button {
    border-radius: 52px;
    transition: 230ms;
    font-size: 1.6em;
    padding: 0.4em 0.5em;
    border: 2px solid black;
  }

  .editor_btn button:hover {
    color: rgb(235, 52, 52);
  }

  .car {
    width: 90%;
    height: 28%;
    overflow: hidden;
  }

  pre {
    overflow-y: scroll;
    height: 30em;
    /* margin: 2.5em 0; */
  }

  .pro {
    width: 60%;
  }

  @media screen and (max-width: 768px) {
    .pro {
      width: 85% !important;
    }

    .car {
      width: 78%;
    }

    /* 
        pre {
            overflow-y: hidden;
        } */
  }
</style>

<body>
  <h1 class="text-center text-danger">
    SPECIMEN PAPER COMPUTER APPLICATIONS SOLUTION-SEMESTER 2 2022
  </h1>
  <div class="container mt-5">
    <div class="row gx-3">
      <div class="col-md-6">
        <div class="border border-2 border-highlight">
          <div class="d-flex flex-sm-row justify-content-center">
            <div class="fw-bold">
              <p class="fs-5 fw-bold lh-base">BOARD -</p>
              <p class="fs-5 fw-bold lh-base">CLASS -</p>
              <p class="fs-5 fw-bold lh-base">SUBJECT -</p>
            </div>
            <div class="text-dark">
              <p class="fs-5 lh-base">ISC</p>
              <p class="fs-5 lh-base">12th</p>
              <p class="fs-5 lh-base">COMPUTER APPLICATIONS</p>
            </div>
          </div>
        </div>
      </div>

      <div class="col-md-6">
        <div class="border border-2 border-highlight">
          <h3 class="text-secondary text-center fw-bold">
            Paper Pattern for Written Term-II
          </h3>
          <div class="d-flex p-1 flex-sm-row justify-content-center">
            <div class="fw-bold">
              <p class="fs-5 fw-bold lh-base">TIME -</p>
              <p class="fs-5 fw-bold lh-base">MARKS -</p>
            </div>
            <div class="text-dark">
              <p class="fs-5 lh-base">1 Hour 30 minutes</p>
              <p class="fs-5 lh-base">35</p>
            </div>
          </div>
        </div>
      </div>
    </div>

    <h5 class="text-center">
      Visit
      <a href="https://www.cisce.org/publications.aspx#REGULATIONS%20AND%20SYLLABUSES%20-%20ICSE">
        CISCE OFFICIAL PAGE</a>
      for Regulations and Syllabus of Class 12th ISC
    </h5>
    <h2 class="fw-bold text-center mt-4">
      <u>Solved Specimen Paper Semester-2 2022</u>
    </h2>

    <!-- question 1(1) -->
    <div class="row">
      <div class="col border border-1 mt-3">
        <h4 class="text-center text-dark">
          Question 1 [Computer Applications Specimen Paper Semester-2 2022]
        </h4>
      </div>
    </div>

    <div class="row">
      <div class="col border border-1 mt-3">
        <h4 class="text-danger">
          <span class="fw-bold">(a)</span> The keyword used by a class to
          acquire the properties of an interface is:
        </h4>
        <ol type="I">
          <li>import</li>
          <li>implements</li>
          <li>extends</li>
          <li>include</li>
        </ol>
        <h4><span class="text-success">Solution</span></h4>
        <div>
          <h4>(II)</h4>
          <h4>implements</h4>
        </div>
      </div>
    </div>
    <!-- question 1(b) -->
    <div class="row">
      <div class="col border border-1 mt-3">
        <h4 class="text-danger">
          <span class="fw-bold">(b)</span> The ability of an object to take many
          forms is known as:
        </h4>
        <ol type="I">
          <li>inheritance</li>
          <li>data abstraction</li>
          <li>overriding</li>
          <li>polymorphism</li>
        </ol>
        <h4><span class="text-success">Solution</span></h4>
        <div>
          <h4>(IV)</h4>
          <h4>implements</h4>
        </div>
      </div>
    </div>
    <!-- question 1(c) -->
    <div class="row">
      <div class="col border border-1 mt-3">
        <h4 class="text-danger">
          <span class="fw-bold">(c)</span>
          int Toy(int n)
          <br />
          { return (n
          <=0)? 1: n%10 + Toy(n/10); } <br />
          With reference to the program code given above, what will the function
          Toy() return when the value of n=56 ?
        </h4>
        <ol type="I">
          <li>65</li>
          <li>12</li>
          <li>651</li>
          <li>11</li>
        </ol>
        <h4><span class="text-success">Solution</span></h4>
        <img class="img-fluid" width="500px"
          src="specimenchapimg/2021-2022/Term-2/isc12-comp-speci/53988191-6da4-4e3b-899f-f03a326a3cc7.jpg" alt=""
          style="width: 500px" />
        <div>
          <br />
          <h4>(IV)</h4>
          <h4>11</h4>
        </div>
      </div>
    </div>
    <!-- question 1(d) -->
    <div class="row">
      <div class="col border border-1 mt-3">
        <h4 class="text-danger">
          <span class="fw-bold">(d)</span>
          Write the statement in Java to extract the word “MISS” from the word
          “SUBMISSION”.
        </h4>

        <h4><span class="text-success">Solution:</span></h4>
        <div>
          <h4>String s="SUBMISSION"</h4>
          <h4>s=s.substring(3,7); //MISS</h4>
        </div>
      </div>
    </div>
    <!-- question 1(e) -->
    <div class="row">
      <div class="col border border-1 mt-3">
        <h4 class="text-danger">
          <span class="fw-bold">(e)</span>
          State the principle by which the stack data structure works.
        </h4>

        <h4><span class="text-success">Solution:</span></h4>
        <div>
          <h5>
            Stacks in Data Structures is a linear type of data structure that
            follows the LIFO (Last-In-First-Out) principle and allows insertion
            and deletion operations from one end of the stack data structure,
            that is top. Implementation of the stack can be done by contiguous
            memory which is an array, and non-contiguous memory which is a
            linked list. Stack plays a vital role in many applications.
          </h5>
        </div>
      </div>
    </div>
    <!-- question 1(f) -->
    <div class="row">
      <div class="col border border-1 mt-3">
        <h4 class="text-danger">
          <span class="fw-bold">(f)</span>
          What is the output of the statement given below?
          <br />
          System.out.print("FAN" + ("AUTOMATIC".charAt(5) ) );
        </h4>

        <h4><span class="text-success">Solution:</span></h4>
        <div>
          <h4>The Output of given statement is:</h4>
          <h4>
            FANA
            <br />
            //FAN+A(CharAt is used to extract a single char from a whole word)
          </h4>
        </div>
      </div>
    </div>
    <!-- question 1(g) -->
    <div class="row">
      <div class="col border border-1 mt-3">
        <h4 class="text-danger">
          <span class="fw-bold">(g)</span>
          Give one reason, why iteration is better than recursion.
        </h4>

        <h4><span class="text-success">Solution:</span></h4>
        <div>
          <h4>
            Iteration is better than recursion when time complexity is the point
            of focus, and number of recursive calls would be large, it is better
            to use iteration. However, if time complexity is not an issue and
            shortness of code is, recursion would be the way to go
          </h4>
        </div>
      </div>
    </div>

    <!-- question(2) -->
    <div class="row">
      <div class="col border border-1 mt-3">
        <h4 class="text-center text-dark">Question 2</h4>
      </div>
    </div>
    <div class="row">
      <div class="col border border-1 mt-3">
        <h4 class="text-danger">
          <span class="fw-bold"></span>
          Differentiate between direct recursion and indirect recursion.
        </h4>

        <h4><span class="text-success">Solution:</span></h4>
        <table class="table table-bordered table-hover" style="width: 77%">
          <thead>
            <tr>
              <th scope="col">Direct Recursion</th>
              <th scope="col">Indirect Recursion</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td>
                In the direct recursion, only one function is called by itself.
              </td>
              <td>
                In indirect recursion more than one function are by the other
                function and number of times.
              </td>
            </tr>
            <tr>
              <td>direct recursion makes overhead.</td>
              <td>
                The indirect recursion does not make any overhead as direct
                recursion
              </td>
            </tr>
            <tr>
              <td>The direct recursion called by the same function</td>
              <td>While the indirect function called by the other function</td>
            </tr>
          </tbody>
        </table>
      </div>
    </div>

    <!-- question (3) -->
    <div class="row">
      <div class="col border border-1 mt-3">
        <h4 class="text-center text-dark">Question 3</h4>
      </div>
      <div class="row">
        <div class="col border border-1 mt-3">
          <h4 class="text-danger">
            <span class="fw-bold"></span>
            Convert the following infix notation to postfix notation:
            <br />
            A * (B + C / D ) – E / F
          </h4>

          <h4><span class="text-success">Solution:</span></h4>
          <img class="img-fluid" width="500px"
            src="specimenchapimg/2021-2022/Term-2/isc12-comp-speci/2cf45aa3-cfb5-465a-9ba7-316f80b55ec8.jpg" alt=""
            style="width: 500px" />
        </div>
      </div>
      <!-- question (4) -->
      <div class="row">
        <div class="col border border-1 mt-3">
          <h4 class="text-center text-dark">Question 4</h4>
        </div>
        <div class="row">
          <div class="col border border-1 mt-3">
            <h4 class="text-danger">
              <span class="fw-bold"></span>
              Answer the following questions on the diagram of a Binary Tree
              given below:
              <img src="specimenchapimg/2021-2022/Term-2/isc12-comp-speci/tree.png" alt="" style="width: 50%" />
            </h4>
            <ol type="I">
              <li>
                State the degree of the nodes C and G. Also, state the level of
                these nodes when the root is at level 0.
                <h4><span class="text-success">Solution:</span></h4>
                <div>
                  <h5>Degree of C is <b>2</b></h5>
                  <h5>Degree of G is <b>0</b></h5>
                  <br />
                  <h5>Level of C will be <b>1</b>,when root is at level 0</h5>
                  <h5>Level of G will be <b>3</b>,when root is at level 0</h5>
                </div>
              </li>
              <li>
                Write the pre order and post order traversal of the above tree
                structure.
                <h4><span class="text-success">Solution:</span></h4>
                <div>
                  <h5>Preorder:</h5>
                  <h5>A->B->D->C->E->F->G</h5>
                </div>
                <br />
                <div>
                  <h5>Postorder:</h5>
                  <h5>D->B->E->G->F->C->A</h5>
                </div>
              </li>
            </ol>
          </div>
        </div>

        <!-- question 5(i) -->
        <div class="row">
          <div class="col border border-1 mt-3">
            <h4 class="text-center text-dark">Question 5</h4>
          </div>
        </div>
        <div class="row">
          <div class="col border border-1 mt-3">
            <h4 class="text-danger" style="line-height: 1.4">
              <span class="fw-bold">(i)</span>
              Design a class Check which checks whether a word is a palindrome
              or not.
              <br />
              (Palindrome words are those which spell the same from either
              ends).
              <br />
              Example: MADAM, LEVEL etc.
              <br />
              The details of the members of the class are given below:
            </h4>

            <img src="specimenchapimg/2021-2022/Term-2/isc12-comp-speci/program1.png" alt="" class="pro"
              style="width: 60%" />
            <h4 class="" style="line-height: 1.4">
              <span class="fw-bold"></span> Specify the class
              <b> Check</b> giving details of the
              <b>constructor, void acceptword( ), boolean palindrome( )</b>
              and <b>void display( )</b>. Define the <b>main( )</b>
              function to create an object and call the functions accordingly
              to enable the task.
            </h4>

            <h4><span class="text-success">Solution:</span></h4>
            <div class="edit">
              <div class="editor_btn" onclick="copy(this)">
                <button class="mb-3">
                  <i class="fa fa-solid fa-copy"></i>
                </button>
              </div>
              <div class="car">
                <pre style="font-weight: 900">
import java.util.*;
class check{
String wrd;int len;
check(){
wrd="";
len=0;
}
void acceptword(){
Scanner sc=new Scanner(System.in);
System.out.println("Enter the word");
wrd=sc.nextLine();
len=wrd.length();
}
boolean palindrome(){
String s="";
for(int i=0;i< len; i++ ) {
s=s+wrd.charAt(i);
}
if(wrd.equals(s)) {
return true;
}
else{
return false;
}
}
void display(){
boolean chk=palindrome();
if(chk== true){
System.out.println(wrd+" is a palindrome number " );
}
else{
System.out.println(wrd+ " is not a palindrome number" );
}
}
public static void main(String args[]){
check ch=new check();
ch.acceptword();
ch.display();
}
}
                                </pre>
              </div>
            </div>
          </div>
        </div>

        <!-- question 5(ii) -->
        <div class="row">
          <div class="col border border-1 mt-3">
            <h4 class="text-danger" style="line-height: 1.4">
              <span class="fw-bold">(ii)</span>
              Design a class Toggle which toggles a word by converting all upper
              case alphabets to lower case and vice versa.
              <br />
              Example: The word “mOTivATe” becomes “MotIVatE”
              <br />
              The details of the members of the class are given below:
            </h4>

            <img src="specimenchapimg/2021-2022/Term-2/isc12-comp-speci/program2.png" alt="" class="pro" />
            <h4 class="" style="line-height: 1.4">
              <span class="fw-bold"></span> Specify the class
              <b>Toggle</b>giving details of the
              <b> constructor, void readword( ), void toggle( )</b> and
              <b>void display( )</b>. Define the <b> main( )</b>
              function to create an object and call the functions accordingly to
              enable the task.
            </h4>

            <h4><span class="text-success">Solution:</span></h4>
            <div class="edit">
              <div class="editor_btn" onclick="copy(this)">
                <button class="mb-3"><i class="fa fa-solid fa-copy"></i></button>

              </div>
              <div class="car">
                <pre style="font-weight: 900">
 import java.util.*;
class Toggle{
String str,newstr;
int len;
Toggle(){
str="";
newstr="";
len=0;
}
void readword(){
Scanner sc=new Scanner(System.in);
System.out.println("Enter the word");
str=sc.nextLine();
len=str.length();
}
void toggle(){
    char ch,ch1;
for(int i=0;i< len;i++){
    ch=str.charAt(i);
if(Character.isUpperCase(ch)){
    ch1=Character.toLowerCase(ch);
newstr=newstr+ch1;
}
else{
ch1=Character.toUpperCase(ch);
newstr=newstr+ch1;
}
}
System.out.println("Original word is="+str);
System.out.println("Toggled word is="+newstr);
}
public static void main(String args[]){
Toggle tg=new Toggle();
tg.readword();
tg.toggle();
}
}
                                    </pre>
              </div>
            </div>
          </div>
        </div>

        <!-- question 6(i) -->
        <div class="row">
          <div class="col border border-1 mt-3">
            <h4 class="text-center text-dark">Question 6</h4>
          </div>
        </div>
        <div class="row">
          <div class="col border border-1 mt-3">
            <h4 class="text-danger" style="line-height: 1.4">
              <span class="fw-bold">(i)</span> A class <b>Fibo</b> has been
              defined to generate the Fibonacci series 0, 1, 1, 2, 3, 5, 8,
              13,……. (Fibonacci series are those in which the sum of the
              previous two terms is equal to the next term). Some of the members
              of the class are given below:
            </h4>

            <img src="specimenchapimg/2021-2022/Term-2/isc12-comp-speci/program3.png" alt="" class="pro" />
            <h4 class="" style="line-height: 1.4">
              <span class="fw-bold"></span> Specify the class <b>Fibo</b>,
              giving details of the
              <b>Constructor, void read( ), int fibo(int)</b>, and
              <b>void display( )</b>. Define the main() function to create an
              object and call the functions accordingly to enable the task.
            </h4>

            <h4><span class="text-success">Solution:</span></h4>
            <div class="edit">
              <div class="editor_btn" onclick="copy(this)">
                <button class="mb-3"><i class="fa fa-solid fa-copy"></i></button>

              </div>
              <div class="car">
                <pre style="font-weight: 900">
import java.util.*;
class Fibo{
int start,end;
Fibo(){
    start=0;
    end=0;
}
void read(){
Scanner sc=new Scanner(System.in);
System.out.println("Enter the number start value");
start=sc.nextInt();
System.out.println("Enter the number end value");
end=sc.nextInt();
}
int fibo(int n){
if(n==0){
return 0;
}
else if(n==1){
return 1;
}
else{
return (fibo(n-1)+fibo(n-2));
}
}
void display(){
    System.out.print("fibonacci series is=");
for(int i=start;i< end;i++){
System.out.print(fibo(i)+",");
}
}
public static void main(String args[]){
Fibo fb=new Fibo();
fb.read();
fb.display();
}
}

                                </pre>
              </div>
            </div>
          </div>
        </div>

        <!-- question 6(ii) -->
        <div class="row">
          <div class="col border border-1 mt-3">
            <h4 class="text-danger" style="line-height: 1.4">
              <span class="fw-bold">(ii)</span> A class <b>Gcd</b> has been
              defined to find the Greatest Common Divisor of two integer
              numbers. Some of the members of the class are given below:
            </h4>
            <img src="specimenchapimg/2021-2022/Term-2/isc12-comp-speci/program4.png" alt="" class="pro" />
            <h4 class="" style="line-height: 1.4">
              <span class="fw-bold"></span> Specify the class <b>Gcd</b>, giving
              details of the
              <b>Constructor, void accept( ), int gcd(int,int)</b> , and
              <b>void display( )</b>. Define the <b>main()</b> function to
              create an object and call the functions accordingly to enable the
              task.
            </h4>
            <h4><span class="text-success">Solution:</span></h4>
            <div class="edit">
              <div class="editor_btn" onclick="copy(this)">
                <button class="mb-3"><i class="fa fa-solid fa-copy"></i></button>

              </div>
              <div class="car">
                <pre style="font-weight: 900">
import java.util.*;
class gcd{
int num1,num2;
gcd(){
    num1=0;
    num2=0;
}
void accept(){
Scanner sc=new Scanner(System.in);
System.out.println("Enter the first number");
num1=sc.nextInt();
System.out.println("Enter the second number");
num2=sc.nextInt();

}
int gcd(int x,int y){
if(y!=0)
{
return gcd(y,x%y);
}
else{
return x;
}
}
void display(){
int result=gcd(num1,num2);
System.out.println("GCD of "+num1+" and "+num2+" is="+result);
}
public static void main(String args[]){
gcd g=new gcd();
g.accept();
g.display();
}
}
                                </pre>
              </div>
            </div>
          </div>
        </div>

        <div class="row">
          <div class="col border border-1 mt-3">
            <h4 class="text-center text-dark">Question 7</h4>
          </div>
        </div>
        <div class="row">
          <div class="col border border-1 mt-3">
            <h4 class="text-danger" style="line-height: 1.4">
              <span class="fw-bold"></span> A super class <b>Godown</b> has been
              defined to store the details of the stock of a retail store.
              Define a subclass <b>Update</b> to store the details of the items
              purchased with the new rate and update the stock. Some of the
              members of both the classes are given below:
            </h4>

            <img src="specimenchapimg/2021-2022/Term-2/isc12-comp-speci/program5.png" alt="" class="pro" />
            <h4 class="" style="line-height: 1.4">
              <span class="fw-bold"></span> Assume that the super class
              <b>Godown</b> has been defined. Using the
              <b>concept of inheritance</b>, specify the class
              <b>Update </b> giving details of the
              <b>constructor, void update ( ) and void display( )</b> .
            </h4>

            <h4><span class="text-success">Solution:</span></h4>
            <div class="edit">
              <div class="editor_btn" onclick="copy(this)">
                <button class="mb-3"><i class="fa fa-solid fa-copy"></i></button>

              </div>
              <div class="car">
                <pre style="font-weight: 900">
import java.util.*;
class godown{
String item;
int qty,rate,amt;
godown(String a,int b,int c){
item=a;
qty=b;
rate=c;
amt=qty*rate;
}
void display(){
System.out.println("Item name is="+item+" Item Quantity is="+qty+" Item rate is="+rate+" net amount is="+amt);
}
}
class update extends godown
{
    int pur_qty,pur_rate;
    update(String a,int b,int c,int d,int e){
    super(a,b,c);
    pur_qty=d;
    pur_rate=e;
}
void update(){
qty+=pur_qty;
if(rate!=pur_rate){
rate=pur_rate;
amt=qty*rate;
}}
void display(){
System.out.println("Previous details:");
super.display();
update();
System.out.println("New Details");
super.display();
}

}
                                </pre>
              </div>
            </div>
          </div>
        </div>

        <!-- Question 8 -->
        <div class="row">
          <div class="col border border-1 mt-3">
            <h4 class="text-center text-dark">Question 8</h4>
          </div>
        </div>

        <div class="row">
          <div class="col border border-1 mt-3">
            <h4 class="text-danger" style="line-height: 1.4">
              <span class="fw-bold"></span>A Queue is a linear data structure in which the operations are performed
              based on
              FIFO (First In First Out).
              <br>
              Define a class <b> Queue </b>with the following details:
            </h4>

            <img src="specimenchapimg/2021-2022/Term-2/isc12-comp-speci/program8.png" alt="" class="pro" />
            <h4 class="" style="line-height: 1.4">
              <span class="fw-bold"></span> Specify the class <b> Queue </b> giving the details of <b>void add_dat(int)
              </b> and <b>int pop_dat( )</b>.
              Assume that the other functions have been defined.
              <br>
              <b> The main( ) function and algorithm need NOT be written. </b>
            </h4>

            <h4><span class="text-success">Solution:</span></h4>
            <div class="edit">
              <div class="editor_btn" onclick="copy(this)">
                <button class="mb-3"><i class="fa fa-solid fa-copy"></i></button>

              </div>
              <div class="car">
                <pre style="font-weight: 900">
class Queue
{
int dat[];
int cap, front, rear;
public Queue(int size)
{
  cap=size;
  dat = new int[cap];
  front=rear=0;
}
public void add_dat(int v)
{
 if(rear<=cap-1)
{
dat[rear]=v;
rear++;
}
else
System.out.println("Sorry Queue is full");        
 }
 public int pop_dat()
{
if(front!=rear)
{
return dat[front++];
 }
else
{
System.out.println("Sorry Queue is empty");
 return -999;
}            
}
 public void display()
 {
 for(int i=front; i< srear; i++)
 {
 System.out.print(dat[i]+" ");
}
}
}


      </pre>
              </div>
            </div>
          </div>
        </div>


      </div>
    </div>
  </div>
  <script src="https://code.jquery.com/jquery-3.6.0.js" integrity="sha256-H+K7U5CnXl1h5ywQfKtSj8PCmoN9aaq30gDh27Xc0jk="
    crossorigin="anonymous"></script>
  <script>
    function copy(e) {
      let code = e.parentNode.children[1].children[0]
      navigator.clipboard.writeText($(code).text());
    }

  </script>
</body>